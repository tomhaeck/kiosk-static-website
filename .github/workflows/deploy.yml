name: Deploy to S3 and EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Configure AWS Credentials for S3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      # Step 3: Deploy files to S3
      - name: Deploy to S3
        run: |
          aws s3 sync . s3://kioskhoegaarden.be --delete

      # Step 4: Sync files to EC2
      - name: Sync files to EC2
        env:
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          EC2_INSTANCE_ENDPOINT: ${{ secrets.EC2_INSTANCE_ENDPOINT }}
        run: |
          # Save the private key to a file
          echo "$EC2_PRIVATE_KEY" > private-key.pem
          chmod 600 private-key.pem

          # Create the .ssh directory if it doesn't exist
          mkdir -p ~/.ssh

          # Add the EC2 instance to known_hosts to avoid host key verification error
          ssh-keyscan -H $EC2_INSTANCE_ENDPOINT >> ~/.ssh/known_hosts

          # Sync the files to EC2 using scp
          scp -i private-key.pem -r . ubuntu@$EC2_INSTANCE_ENDPOINT:/var/www/html

          # Optional: SSH into the instance to set permissions
          ssh -i private-key.pem ubuntu@$EC2_INSTANCE_ENDPOINT "sudo chmod -R 755 /var/www/html"

          # Clean up the private key
          rm -f private-key.pem
